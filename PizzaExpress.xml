<?xml version="1.0" encoding="UTF-8"?> 
<vxml version="2.0" xmlns="http://www.w3.org/2001/vxml" xml:lang="en-US"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.w3.org/2001/vxml http://www.w3.org/TR/voicexml20/vxml.xsd"
  xmlns:voxeo="http://community.voxeo.com/xmlns/vxml">

<meta name="maintainer" content="jeff_heath@sil.org"/>

<!-- allow low confidence results, but make sure to confirm them -->
<property name="confidencelevel" value="0.2"/>
<!-- always load a fresh copy of the grammar -->
<property name="grammarmaxage" value="0"/>

<!-- some global variables -->
<var name="curr_prompt" expr="'How may I help you.'"/>
<var name="phone_num" expr="session.callerid"/>
<var name="all_orders" expr="[]"/>
<var name="curr_order"/>
<var name="confidence_score" expr="0"/>
<var name="total_confidence_score" expr="1"/>
<var name="confirmed"/>

<property name="universals" value="help repeat" />

<!-- define global help commands -->
<link event="help" scope="global">
  <grammar root="help">
    <rule id="help" scope="public">
      <one-of>
        <item>help</item>
        <item>help me</item>
        <item>i'm lost</item>
        <item>where am i</item>
      </one-of>
    </rule>
  </grammar>
</link>

<catch event="repeat">
  <reprompt />
</catch>

<!-- define a way to cancel the session -->
<link next="#frm_cancel" scope="public">
  <grammar root="cancel">
    <rule id="cancel" scope="public">
      <one-of>
        <item>cancel</item>
        <item>abort</item>
      </one-of>
    </rule>
  </grammar>
</link>

<!-- define a way to restart the session -->
<link next="#frm_restart" scope="public">
  <grammar root="restart">
    <rule id="restart" scope="public">
      <one-of>
        <item>restart</item>
        <item>start over</item>
      </one-of>
    </rule>
  </grammar>
</link>

<!-- define the responses to no input (silence) -->
<catch event="noinput"> 
  <prompt>Sorry, I couldn't hear you.</prompt>
  <reprompt/>
</catch>
<catch event="noinput" count="3"> 
  <prompt>Sorry, I'm not hearing you. Please call back later.</prompt>
  <exit/>
</catch>

<!-- define the default help -->
<catch event="help"> 
  <prompt>Sorry, no additional help is available.</prompt>
  <reprompt/>
</catch>

<!-- define the welcome form -->
<form id="frm_welcome">
  <block>
    <voxeo:recordcall info="pizzaExpress" value="100"/>
    <prompt bargein="false">
      <break time="1000ms" />
      Welcome to Pizza iks-press.
      <break time="250ms" />
    </prompt>
    <goto next="#frm_main" />
  </block>
</form>

<form id="frm_main">
  <var name="confirmed"/>
  
  <grammar src="PizzaExpress-grammar.xml" root="define_mixed" />
  
  <initial name="initial_request">
    <prompt><value expr="curr_prompt"/></prompt>
    
    <catch event="nomatch"> 
      <log>Utterance: <value expr="application.lastresult$.utterance"/></log>
      <prompt>Sorry, I didn't catch that.</prompt>
    </catch>
    <catch event="nomatch" count="2"> 
      <log>Utterance: <value expr="application.lastresult$.utterance"/></log>
      <prompt>I didn't follow. You can say something like <break time="150"/> "I'd like a large sausage pizza."</prompt>
    </catch>
    <catch event="nomatch" count="3"> 
      <log>Utterance: <value expr="application.lastresult$.utterance"/></log>
      <prompt>Sorry, I'm still not catching it. Please speak clearly,
        and just say the minimum, like <break time="150"/> large sausage pizza.</prompt>
    </catch>
    <catch event="nomatch" count="5"> 
      <log>Utterance: <value expr="application.lastresult$.utterance"/></log>
      <prompt>Sorry, I'm still not catching it.</prompt>
      <goto next="#frm_finished"/>
    </catch>
    <catch event="help"> 
      <prompt>Say something like <break time="150"/> "I'd like a large sausage pizza" or "chef salad with ranch dressing".
      To cancel you can simply hang up.</prompt>
      <reprompt/>
    </catch>
  </initial>
  
  <field name="Cmd">
    <!-- defines the field, but processing should never get here -->
    <prompt> Internal error in the field Command. </prompt>
  </field>
  
  <field name="Order">
    <!-- defines the field, but processing should never get here -->
    <prompt> Internal error in the field Order. </prompt>
  </field>
  
  <filled namelist="Cmd">
    <!-- process the command -->
    <log>Utterance: <value expr="application.lastresult$.utterance"/></log>
    <assign name="confidence_score" expr="application.lastresult$.confidence"/>
    <log>Confidence: <value expr="confidence_score"/></log>
    <log>Cmd: <value expr="Cmd"/></log>
    <if cond="Cmd=='Hours'">
      <goto next="#frm_hours"/>
    <elseif cond="Cmd=='Finished'" />
      <goto next="#frm_finished"/>
    <elseif cond="Cmd=='Order'" />
      <!-- check if the item ordered is complete -->
      <assign name="curr_order" expr="Order" />
      <log>Item: <value expr="curr_order.Item"/></log>
      <log>Toppings: <value expr="curr_order.Toppings"/></log>
      <if cond="Order.Item=='pizza'">
        <goto next="#frm_order_pizza"/>
      <elseif cond="Order.Item=='salad'" />
        <goto next="#frm_order_salad"/>
      <elseif cond="Order.Item=='drink'" />
        <goto next="#frm_order_drink"/>
      <else />
        <prompt> Invalid order. </prompt>
      </if>
    <else />
      <prompt> Invalid command. </prompt>
    </if>
    <clear namelist="Cmd curr_order"/>
  </filled>

</form>


<!-- define a way to exit the session -->
<form id="frm_exit">
  <subdialog name="get_confirmation" src="#getconfirmation">
    <param name="confirm_prompt" expr="'Would you like to exit without placing an order?'"/>
    <filled>
      <if cond="get_confirmation.yesno == 'yes'">
        <prompt> Okay, Goodbye. </prompt>
        <exit/>
      </if>
      <prompt bargein="false"> Okay, let's continue. </prompt>
      <goto next="#frm_main" />
    </filled>
  </subdialog>
</form>

<!-- define a way to restart the session -->
<form id="frm_restart">
  <subdialog name="get_confirmation" src="#getconfirmation">
    <param name="confirm_prompt" expr="'Would you like to start over from scratch?'"/>
    <filled>
      <if cond="get_confirmation.yesno == 'yes'">
        <prompt bargein="false"> Okay, let's start over. </prompt>
        <!-- clear all variables, and initialize a few key ones -->
        <clear/>
        <assign name="curr_prompt" expr="'How may I help you.'"/>
        <assign name="phone_num" expr="session.callerid"/>
        <assign name="all_orders" expr="[]"/>
      <else/>
        <prompt bargein="false"> Okay, let's continue. </prompt>
      </if>
      <goto next="#frm_main" />
    </filled>
  </subdialog>
</form>


<!-- dialog for presenting the restaurant hours -->
<form id="frm_hours">
  <block>
    <if cond="confidence_score &gt; 0.5">
      <assign name="get_confirmation" expr="'yes'"/>
    </if>
  </block>
  
  <subdialog name="get_confirmation" src="#getconfirmation">
    <param name="confirm_prompt" expr="'Are you asking about our hours?'"/>
    <filled>
      <log>Jeff: Confirmed is <value expr="get_confirmation.yesno"/></log>
      <if cond="get_confirmation.yesno == 'no'">
        Okay, let's try again.
        <goto next="#frm_main"/>
      </if>
    </filled>
  </subdialog>
  
  <block>
    <prompt> We are open 11 a m to 9 p m Monday through Saturday. </prompt>
    <if cond="all_orders.length &gt; 0">
      <assign name="curr_prompt" expr="'What else would you like to order.'"/>
    <else/>
      <assign name="curr_prompt" expr="'How else may I help you.'"/>
    </if>
    <goto next="#frm_main"/>
  </block>
</form>


<!-- dialog for confirming that the pizza order is complete -->
<form id="frm_order_pizza">
  <var name="number_str"/>
  <var name="size_str"/>
  <var name="toppings_str" expr="''"/>
  <var name="pizza_str" expr="'pizza'"/>
  
  <block>
    <log>Item: <value expr="curr_order.Item"/></log>
    <log>Toppings: <value expr="curr_order.Toppings"/></log>
    <script><![CDATA[
      if (!("Number" in curr_order)) {
        // just use default number, if not specified
        curr_order.Number = "1";
      }
      number_str = curr_order.Number;
      if (parseInt(number_str, 10) > 1) {
        pizza_str = "pizzas";
      }
      
      size = curr_order.Size;
      if ("Size" in curr_order) {
        size_str = size;
      } else {
        // we don't know the size yet
        size_str = "";
      }
      
      toppings = curr_order.Toppings;
      if ("Toppings" in curr_order) {
        if (curr_order.Toppings.length > 1) {
          toppings_str = curr_order.Toppings.slice(0,curr_order.Toppings.length-1).toString() +
                 " and " + curr_order.Toppings[curr_order.Toppings.length-1];
        } else {
          toppings_str += curr_order.Toppings[0];
        }
      } else {
        // we don't know the toppings yet
        toppings_str = "";
      }
      
      if (confidence_score > 0.8) {
        // reduce grounding if we are pretty confident
        number_str = "";
        size_str = "";
        toppings_str = "";
      }
      ]]>
    </script>
    <log>Number: <value expr="curr_order.Number"/></log>
    <log>toppings_str: <value expr="toppings_str"/></log>
  </block>
  
  <field name="toppings">
    <prompt> What would you like on your <value expr="number_str"/> <value expr="size_str"/> <value expr="pizza_str"/>? </prompt>
    <grammar src="PizzaExpress-grammar.xml#grm_toppings"/>
    <nomatch>
      Please say the toppings you want for this pizza or select a specialty pizza.
    </nomatch>
    <nomatch count="4">
      <prompt>I'm not following you. Please call back later.</prompt>
      <exit/>
    </nomatch>
    <help>
      Please select the toppings you want, like sausage and onion, or select a specialty pizza, like house special.
    </help>
    <filled>
      <!-- keep lower confidence score -->
      <if cond="application.lastresult$.confidence &lt; confidence_score">
        <assign name="confidence_score" expr="application.lastresult$.confidence"/>
        <log>New confidence: <value expr="confidence_score"/></log>
      </if>
      <assign name="curr_order.Toppings" expr="toppings.Toppings"/>
    </filled>
  </field>
  
  <field name="size">
    <prompt> What size <value expr="toppings_str"/> <value expr="pizza_str"/> would you like? </prompt>
    <grammar src="PizzaExpress-grammar.xml#grm_size"/>
    <nomatch>
      Please say small or large.
      <reprompt/>
    </nomatch>
    <nomatch count="3">
      <prompt>I'm not following you. Please call back later.</prompt>
      <exit/>
    </nomatch>
    <help>
      Please say the size of pizza you want, either small or large.
    </help>
    <filled>
      <!-- keep lower confidence score -->
      <if cond="application.lastresult$.confidence &lt; confidence_score">
        <assign name="confidence_score" expr="application.lastresult$.confidence"/>
        <log>New confidence: <value expr="confidence_score"/></log>
      </if>
      <log>Size: <value expr="size"/></log>
      <assign name="curr_order.Size" expr="size"/>
    </filled>
  </field>
  
  <block>
    <goto next="#frm_confirm_order"/>
  </block>
</form>


<!-- dialog for confirming that the salad order is complete -->
<form id="frm_order_salad">
  <var name="type_extra_prompt" expr="''"/>
  <var name="dressing_extra_prompt" expr="''"/>
  <block>
    <log>Item: <value expr="curr_order.Item"/></log>
    <log>Type: <value expr="curr_order.Type"/></log>
    <script><![CDATA[
      if (!("Number" in curr_order)) {
        // just use default number, if not specified
        curr_order.Number = "1";
      }
      type = curr_order.Type;
      dressing = curr_order.Dressing;
      ]]>
    </script>
    <log>Number: <value expr="curr_order.Number"/></log>
    
    <!-- define extra grounding phrases -->
    <if cond="confidence_score &lt; 0.8">
      <if cond="dressing">
        <assign name="type_extra_prompt" expr="'with ' + dressing + ' dressing'"/>
      </if>
      <assign name="dressing_extra_prompt" expr="'with your ' + type + ' salad'"/>
    </if>
  </block>
  
  <field name="type">
    <prompt> What type of salad would you like <value expr="type_extra_prompt"/>. </prompt>
    <grammar src="PizzaExpress-grammar.xml#grm_salad_type"/>
    <nomatch>
      Please say the kind of salad you would like.
    </nomatch>
    <nomatch count="2">
      Select from chicken kabob, greek, chef, antipasto, tuna, caesar or garden.
    </nomatch>
    <nomatch count="4">
      <prompt>I'm not following you. Please call back later.</prompt>
      <exit/>
    </nomatch>
    <help>
      Please select the kind of salad you want, like greek, tuna or garden.
    </help>
    <filled>
      <!-- keep lower confidence score -->
      <if cond="application.lastresult$.confidence &lt; confidence_score">
        <assign name="confidence_score" expr="application.lastresult$.confidence"/>
        <log>New confidence: <value expr="confidence_score"/></log>
      </if>
      <if cond="confidence_score &lt; 0.8">
        <assign name="dressing_extra_prompt" expr="'with your ' + type + ' salad'"/>
      </if>
      <assign name="curr_order.Type" expr="type"/>
    </filled>
  </field>
  
  <field name="dressing">
    <prompt> What kind of salad dressing would you like <value expr="dressing_extra_prompt"/>. </prompt>
    <grammar src="PizzaExpress-grammar.xml#grm_salad_dressing"/>
    <nomatch>
      Please say the kind of salad dressing you would like.
    </nomatch>
    <nomatch count="2">
      Select from ranch, italian, creamy italian, blue cheese, greek, caesar or fat free raspberry vinaigrette.
    </nomatch>
    <nomatch count="4">
      <prompt>I'm not following you. Please call back later.</prompt>
      <exit/>
    </nomatch>
    <help>
      Please select the kind of salad you want, like italian, blue cheese or greek.
    </help>
    <filled>
      <!-- keep lower confidence score -->
      <if cond="application.lastresult$.confidence &lt; confidence_score">
        <assign name="confidence_score" expr="application.lastresult$.confidence"/>
        <log>New confidence: <value expr="confidence_score"/></log>
      </if>
      <assign name="curr_order.Dressing" expr="dressing"/>
    </filled>
  </field>
  
  <block>
    <goto next="#frm_confirm_order"/>
  </block>
</form>


<!-- dialog for confirming that the drink order is complete -->
<form id="frm_order_drink">
  <block>
    <log>Item: <value expr="curr_order.Item"/></log>
    <log>Type: <value expr="curr_order.Type"/></log>
    <script><![CDATA[
      if (!("Number" in curr_order)) {
        // just use default number, if not specified
        curr_order.Number = "1";
      }
      size = curr_order.Size;
      ]]>
    </script>
    <log>Number: <value expr="curr_order.Number"/></log>
  </block>
  
  <field name="size">
    <prompt> What size <value expr="curr_order.Type"/> would you like? </prompt>
    <grammar src="PizzaExpress-grammar.xml#grm_size"/>
    <nomatch>
      Please say small or large.
      <reprompt/>
    </nomatch>
    <nomatch count="3">
      <prompt>I'm not following you. Please call back later.</prompt>
      <exit/>
    </nomatch>
    <help>
      Please say the size of drink you want, either small or large.
    </help>
    <filled>
      <!-- keep lower confidence score -->
      <if cond="application.lastresult$.confidence &lt; confidence_score">
        <assign name="confidence_score" expr="application.lastresult$.confidence"/>
        <log>New confidence: <value expr="confidence_score"/></log>
      </if>
      <log>Size: <value expr="size"/></log>
      <assign name="curr_order.Size" expr="size"/>
    </filled>
  </field>
  
  <block>
    <goto next="#frm_confirm_order"/>
  </block>
</form>


<form id="frm_confirm_order">
  <var name="order_string" expr="''"/>
  
  <block>
    <log>Item: <value expr="curr_order.Item"/></log>
    <log>Number: <value expr="curr_order.Number"/></log>
    <log>Size: <value expr="curr_order.Size"/></log>
    
    <!-- if confidence is high enough, skip the confirmation -->
    <if cond="confidence_score &gt; 0.8"> 
      <assign name="get_confirmation" expr="true"/>
    </if>
  </block>
  
  <script><![CDATA[
      // build the string order_string that describes order in curr_order
      // also set curr_order.Cost to the correct price for that item
      if (curr_order.Item == "pizza") {
        order_string = curr_order.Size + " ";
        if (curr_order.Size == "small") curr_order.Cost = 6.75 + 1.50 * curr_order.Toppings.length;
        else curr_order.Cost = 9.95 + 2.00 * curr_order.Toppings.length;

        if (curr_order.Toppings.length > 1) {
          order_string += curr_order.Toppings.slice(0,curr_order.Toppings.length-1).toString() +
                 " and " + curr_order.Toppings[curr_order.Toppings.length-1] + " ";
        } else {
          order_string += curr_order.Toppings[0] + " ";
          // specialty pizzas have special prices
          if (["house special", "chicken kabob and broccoli", "barbeque chicken"].indexOf(curr_order.Toppings[0]) >= 0) {
            if (curr_order.Size == "small") curr_order.Cost = 10.50;
            else curr_order.Cost = 16.95;
          } else if (curr_order.Toppings[0] == "buffalo chicken") {
            if (curr_order.Size == "small") curr_order.Cost = 10.50;
            else curr_order.Cost = 15.95;
          } else if (curr_order.Toppings[0] == "spinach and feta") {
            if (curr_order.Size == "small") curr_order.Cost = 9.75;
            else curr_order.Cost = 14.95;
          } else if (curr_order.Toppings[0] == "hawaiian") {
            if (curr_order.Size == "small") curr_order.Cost = 9.75;
            else curr_order.Cost = 13.95;
          }
        }
        if (curr_order.Number == "1")
          order_string = "a " + order_string + "pizza";
        else {
          order_string = curr_order.Number + " " + order_string + "pizzas";
          curr_order.Cost *= curr_order.Number;
        }
      } else if (curr_order.Item == "salad") {
        order_string = curr_order.Type;
        curr_order.Cost = 7.75;
        if (curr_order.Type == "chicken kabob") curr_order.Cost = 9.50;
        else if (curr_order.Type == "garden") curr_order.Cost = 6.75;
        if (curr_order.Dressing == "blue cheese") curr_order.Cost += 0.75;
        
        if (curr_order.Number == "1")
          order_string = "a " + order_string + " salad";
        else {
          order_string = curr_order.Number + " " + order_string + " salads";
          curr_order.Cost *= curr_order.Number;
        }
        order_string += " with " + curr_order.Dressing + " dressing";
      } else if (curr_order.Item == "drink") {
        order_string = curr_order.Size + " " + curr_order.Type;
        if (curr_order.Size == "small") curr_order.Cost = 1.50;
        else curr_order.Cost = 3.00;
        
        if (curr_order.Number == "1")
          order_string = "a " + order_string;
        else {
          order_string = curr_order.Number + " " + order_string + "s";
          curr_order.Cost *= curr_order.Number;
        }
      } else {
        order_string = "invalid order";
        curr_order.Cost = 0;
      }
    ]]>
  </script>
  
  <subdialog name="get_confirmation" src="#getconfirmation">
    <param name="confirm_prompt" expr="'You would like ' + order_string + '?'"/>
    <filled>
      <log>Jeff: Confirmed is <value expr="get_confirmation.yesno"/></log>
      <if cond="get_confirmation.yesno == 'no'">
        <prompt>Okay, let's try that part of the order again.</prompt>
        <assign name="curr_prompt" expr="'What would you like?'"/>
        <clear namelist="curr_order"/>
        <goto next="#frm_main"/>
      </if>
    </filled>
  </subdialog>
  
  <block>
    <script><![CDATA[
      // store this order as part of the total order
      all_orders.push(curr_order);
      ]]>
    </script>
    <prompt>Okay I got that.</prompt>
    <!-- update total confidence score -->
    <if cond="confidence_score &lt; total_confidence_score"> 
      <assign name="total_confidence_score" expr="confidence_score"/>
    </if>
    <assign name="curr_prompt" expr="'What else would you like?'"/>
    <clear namelist="curr_order"/>
    <goto next="#frm_main"/>
  </block>
</form>


<!-- dialog for finishing the order -->
<form id="frm_finished">
  <var name="the_prompt"/>
  <var name="delivery"/>
  
  <block>
    <if cond="all_orders.length == 0">
      <prompt> Thanks for your business! </prompt>
      <exit/>
    </if>
    
    <!-- we always confirm the final order, with a summary of items and cost -->
    
    <script><![CDATA[
      var order_summary = "";
      var total_pizzas = 0;
      var total_salads = 0;
      var total_drinks = 0;
      var total_cost = 0;
      for (var i = 0; i < all_orders.length; ++i) {
        if (all_orders[i].Item == "pizza") total_pizzas += Number(all_orders[i].Number);
        else if (all_orders[i].Item == "salad") total_salads += Number(all_orders[i].Number);
        else if (all_orders[i].Item == "drink") total_drinks += Number(all_orders[i].Number);
        
        total_cost += all_orders[i].Cost;
      }
      
      if (total_pizzas > 0) {
        order_summary = total_pizzas.toString() + " pizza";
        if (total_pizzas > 1) order_summary += "s";
      }
      if (total_salads > 0) {
        if (order_summary.length > 0) order_summary += ", ";
        order_summary += " " + total_salads.toString() + " salad";
        if (total_salads > 1) order_summary += "s";
      }
      if (total_drinks > 0) {
        if (order_summary.length > 0) order_summary += ", ";
        order_summary += " " + total_drinks.toString() + " drink";
        if (total_drinks > 1) order_summary += "s";
      }
      total_cost *= 1.07;
      order_summary += ", at a total cost with tax of $" + total_cost.toFixed(2).toString();
      
      the_prompt = 'Are you ready to place this order for ' + order_summary + '?';
      //the_prompt = 'Shall I place this order for ' + all_orders.length.toString() + ' <break time="120"/>; items?';
      ]]>
    </script>
  </block>
  
  <subdialog name="get_confirmation" src="#getconfirmation">
    <param name="confirm_prompt" expr="the_prompt"/>
    <filled>
      <if cond="get_confirmation.yesno == 'no'">
        <goto next="#frm_restart"/>
      </if>
    </filled>
  </subdialog>
  
  <script><![CDATA[
    function sayPhoneNum(num) {
      // remove a '+' at beginning of number
      num = num.replace(/^\+/, '');
      
      var str = num.charAt(0);
      for(var i = 1; i < num.length; i++) {
        str += ' ' + num.charAt(i);
        if ( (i==2) || (i==5) )
          str += ',';
      }
      return str;
    }
    ]]>
  </script>
  
  <subdialog name="get_phone_confirmation" src="#getconfirmation">
    <param name="confirm_prompt" expr="'Can you confirm your phone number is ' + sayPhoneNum(phone_num) + '?'"/>
    <filled>
      <log>Confirmation: <value expr="get_phone_confirmation.yesno"/></log>
      <if cond="get_phone_confirmation.yesno == 'yes'">
        <assign name="get_phone_num" expr="true"/>
      </if>
    </filled>
  </subdialog>
  
  <subdialog name="get_phone_num" src="phonenum.xml#getphonenum">
    <filled>
      <assign name="phone_num" expr="get_phone_num.phonenum"/>
      <clear namelist="get_phone_confirmation get_phone_num"/>
    </filled>
  </subdialog>
  
<!--   <block>
    make sure we don't go back to that nested subdialog
    <assign name="get_phone_num" expr="true"/>
  </block> -->
  
  <subdialog name="get_delivery" src="#getconfirmation">
    <param name="confirm_prompt" expr="'Would you like your order delivered?'"/>
    <filled>
      <assign name="delivery" expr="get_delivery.yesno"/>
      <log>Delivery: <value expr="delivery"/></log>
      <if cond="delivery == 'yes'">
        <!-- don't need this field if delivering -->
        <assign name="name" expr="true"/>
      <else/>
        <!-- don't need these fields if not delivering -->
        <assign name="address" expr="true"/>
        <assign name="confirm_address" expr="true"/>
      </if>
    </filled>
  </subdialog>
  
  <record name="address" cond="delivery == 'yes'"
    maxtime="10s" finalsilence="700ms" dtmfterm="true" type="audio/x-wav">
    <prompt timeout="5s"> What address should we deliver to? </prompt>
    <noinput> Please say your address. </noinput>
  </record>
  
  <subdialog name="confirm_address" src="#getconfirmation" cond="delivery == 'yes'">
    <prompt>You would like your order delivered to <audio expr="address"/></prompt>
    <param name="confirm_prompt" expr="'Is that correct?'"/>
    <filled>
      <if cond="confirm_address.yesno == 'no'">
        <!-- try again... -->
        <clear namelist="address confirm_address"/>
      </if>
    </filled>
  </subdialog>
  
  <record name="name" cond="delivery == 'no'"
    maxtime="4s" finalsilence="700ms" dtmfterm="true" type="audio/x-wav">
    <prompt timeout="5s"> What name can I put on the order? </prompt>
    <noinput> Please say your name. </noinput>
  </record>
  
  <filled>
    <!-- post the confirmed order -->
    <!-- <submit next="save_message.pl" enctype="multipart/form-data"
           method="post" namelist="address"/> -->
    
    <if cond="delivery == 'yes'">
      <prompt>Your order should be there in about 30 minutes.</prompt>
    <else/>
      <prompt>Your order should be ready for pick up in about 20 minutes.</prompt>
    </if>
    <prompt>
      <break time="250ms" />
      Thanks for your business!
    </prompt>
    <exit/>
  </filled>
    
</form>  <!-- end of frm_finished -->


<!-- subdialog for yes/no confirmation -->
<form id="getconfirmation">
  <!-- override default confidence for this form - want to be more sure when we are confirming -->
  <property name="confidencelevel" value="0.7"/>
  <var name="confirm_prompt"/>
  <field name="yesno">
    <prompt><value expr="confirm_prompt"/></prompt>
    <grammar maxage="0" src="yesno.xml"/>
    <noinput>
      Sorry I couldn't hear you. 
      <reprompt/>
    </noinput>
    <nomatch>
      Please say yes or no.
      <value expr="confirm_prompt"/>
    </nomatch>
    <nomatch count="4">
      <prompt>I'm not following you. Please call back later.</prompt>
      <exit/>
    </nomatch>
    <help>
      Please say yes or no.
      <reprompt/>
    </help>
    <filled>
      <log>yesno: <value expr="yesno"/></log>
      <return namelist="yesno"/>
    </filled>
  </field>
</form>

</vxml>